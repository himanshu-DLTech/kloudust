{
"id": "createvm",
"command": "createVM",
"type": "kloudust_cmdline",
"kloudust_cmdline_params": ["vm_name", "vm_description", "cores", "memory", "disk","vlan", "creation_image_name", "cloudinit_data", "force_overwrite", "maxcores", "maxmemory", "additional_params", "vmtype", "no_qemu_agent",
    "override_host"],

"title": "{{{i18n.VMCreateTitle}}}",

"i18n": {
    "en": {
        "VMCreateTitle": "Create Virtual Machine",
        "VMCreateDescription": "Add a virtual machine to the cloud. Complete the required tab then submit or review advanced tab for full customization.",
        "VMName": "Virtual machine name",
        "VMDescription": "Description",
        "VMCores": "Cores",
        "VMMemory": "Memory in megabytes",
        "VMDisk": "Disk in gigabytes",
        "VMImage": "Image to use",
        "vlan":"choose vlan",
        "VMAdministrator": "Administrator login",
        "VMAdministratorPassword": "Administrator password",
        "VMCloudInitData": "Cloudinit data",
        "FieldValidationErrorGeneric": "Validation error",
        "CreateVMSubmitLabel": "Create",
        "VMYes": "Yes",
        "VMNo": "No",
        "VMAdvanced": "Advanced",
        "VMMaxCores": "Maximum cores for scaling",
        "VMMaxMemory": "Maximum memory for scaling",
        "VMOverwriteForce": "Overwrite if a virtual machine by the same name exists?",
        "VMAdditionalParams": "Additional creation params",
        "VMNoAgent": "Do not install control agent?",
        "VMHostname": "Hostname to force host (else leave blank)"
    },
    "hi": {
        "VMCreateTitle": "Create Virtual Machine",
        "VMCreateDescription": "Add a virtual machine to the cloud. Complete the required tab then submit or review advanced tab for full customization.",
        "VMName": "वीएम नाम",
        "VMDescription": "वीएम विवरण",
        "VMCores": "कोर",
        "VMMemory": "Memory in megabytes",
        "VMDisk": "Disk in gigabytes",
        "VMImage": "Image to use",
        "vlan":"choose vlan",
        "VMAdministrator": "Administrator login",
        "VMAdministratorPassword": "Administrator password",
        "VMCloudInitData": "Cloudinit data",
        "FieldValidationErrorGeneric": "Validation error",
        "CreateVMSubmitLabel": "Create",
        "VMYes": "Yes",
        "VMNo": "No",
        "VMAdvanced": "Advanced",
        "VMMaxCores": "Maximum cores for scaling",
        "VMMaxMemory": "Maximum memory for scaling",
        "VMOverwriteForce": "Overwrite if a virtual machine by the same name exists?",
        "VMAdditionalParams": "Additional creation params",
        "VMNoAgent": "Do not install control agent?",
        "VMHostname": "Hostname to force host (else leave blank)"
    },
    "ja": {
        "VMCreateTitle": "Create Virtual Machine",
        "VMCreateDescription": "Add a virtual machine to the cloud. Complete the required tab then submit or review advanced tab for full customization.",
        "VMName": "VM名",
        "VMDescription": "VMの説明",
        "VMCores": "コア",
        "VMMemory": "Memory in megabytes",
        "VMDisk": "Disk in gigabytes",
        "VMImage": "Image to use",
        "vlan":"choose vlan",
        "VMAdministrator": "Administrator login",
        "VMAdministratorPassword": "Administrator password",
        "VMCloudInitData": "Cloudinit data",
        "FieldValidationErrorGeneric": "Validation error",
        "CreateVMSubmitLabel": "Create",
        "VMYes": "Yes",
        "VMNo": "No",
        "VMAdvanced": "Advanced",
        "VMMaxCores": "Maximum cores for scaling",
        "VMMaxMemory": "Maximum memory for scaling",
        "VMOverwriteForce": "Overwrite if a virtual machine by the same name exists?",
        "VMAdditionalParams": "Additional creation params",
        "VMNoAgent": "Do not install control agent?",
        "VMHostname": "Hostname to force host (else leave blank)"
    },
    "zh": {
        "VMCreateTitle": "Create Virtual Machine",
        "VMCreateDescription": "Add a virtual machine to the cloud. Complete the required tab then submit or review advanced tab for full customization.",
        "VMName": "虚拟机名称",
        "VMDescription": "虚拟机描述",
        "VMCores": "核心",
        "VMMemory": "Memory in megabytes",
        "VMDisk": "Disk in gigabytes",
        "VMImage": "Image to use",
        "vlan":"choose vlan",
        "VMAdministrator": "Administrator login",
        "VMAdministratorPassword": "Administrator password",
        "VMCloudInitData": "Cloudinit data",
        "FieldValidationErrorGeneric": "Validation error",
        "CreateVMSubmitLabel": "Create",
        "VMYes": "Yes",
        "VMNo": "No",
        "VMAdvanced": "Advanced",
        "VMMaxCores": "Maximum cores for scaling",
        "VMMaxMemory": "Maximum memory for scaling",
        "VMOverwriteForce": "Overwrite if a virtual machine by the same name exists?",
        "VMAdditionalParams": "Additional creation params",
        "VMNoAgent": "Do not install control agent?",
        "VMHostname": "Hostname to force host (else leave blank)"
    }
},

"form": {
    "description": "{{{i18n.VMCreateDescription}}}",

    "required_label": "{{{i18n.Required}}}",
    "required_fields": [
    {"id": "vm_name", "type": "text", "placeholder": "{{{i18n.VMName}}}", "required": true, 
        "pattern":"\\s[0-9a-zA-Z-]+\\s", "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "vm_description", "type": "text", "placeholder": "{{{i18n.VMDescription}}}", "required": true},
    {"id": "cores", "type": "number", "placeholder": "{{{i18n.VMCores}}}", "required": true, 
        "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "memory", "type": "number", "placeholder": "{{{i18n.VMMemory}}}", "required": true, 
        "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "disk", "type": "number", "placeholder": "{{{i18n.VMDisk}}}", "required": true, 
        "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "adminid", "type": "text", "placeholder": "{{{i18n.VMAdministrator}}}", "required": true, 
        "pattern":"\\s*[A-Za-z0-9]+\\s*", "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "adminpass", "type": "password", "placeholder": "{{{i18n.VMAdministratorPassword}}}", "required": true, 
       "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "vmtype", "type": "hidden", "value": "vm"},
    {"id": "vlan", "multioption": true, "type": "select", "label": "{{{i18n.vlan}}}", 
        "options":[]},
    {"id": "creation_image_name", "multioption": true, "type": "select", "label": "{{{i18n.VMImage}}}", 
        "options":[]}
    ],

    "optional_label": "{{{i18n.VMAdvanced}}}",
    "optional_fields": [
    {"id": "cloudinit_data", "inputtype": "textarea", "type": "text", "placeholder": "{{{i18n.VMCloudInitData}}}"},
    {"id": "maxcores", "type": "number", "placeholder": "{{{i18n.VMMaxCores}}}", "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "maxmemory", "type": "number", "placeholder": "{{{i18n.VMMaxMemory}}}", "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"},
    {"id": "additional_params", "inputtype": "textarea", "type": "text", "placeholder": "{{{i18n.VMAdditionalParams}}}"},
    {"id": "no_qemu_agent", "multioption": true, "type": "select", "label": "{{{i18n.VMNoAgent}}}", 
        "options":[{"value":"false", "label":"{{{i18n.VMNo}}}"}, {"value":"true", "label":"{{{i18n.VMYes}}}"}]},
    {"id": "force_overwrite", "multioption": true, "type": "select", "label": "{{{i18n.VMOverwriteForce}}}", 
        "options":[{"value":"false", "label":"{{{i18n.VMNo}}}"}, {"value":"true", "label":"{{{i18n.VMYes}}}"}]},
    {"id": "override_host", "type": "text", "placeholder": "{{{i18n.VMHostname}}}", "value":"",
        "pattern":"\\s[0-9a-zA-Z]+\\s", "validation_error": "{{{i18n.FieldValidationErrorGeneric}}}"}
    ],

    "load_javascript": [
        "const form = arguments[0]||{};",
        "const vmResult = await window.monkshu_env.frameworklibs.apimanager.rest(APP_CONSTANTS.API_KLOUDUSTCMD, ",
        "   'POST', {cmd: 'listVMImages'}, true);",
        "if (vmResult.result) for (const vm of vmResult.resources) { ",
        "   const creationImageNameObject = form.required_fields[form.required_fields.length-1];",
        "   creationImageNameObject.options.push({value: vm.name, label: vm.description}); }",
        "if (!monkshu_env.apps[APP_CONSTANTS.APP_NAME].cmdmanager.isCloudAdminLoggedIn()) ",
        "   form.optional_fields.splice(form.optional_fields.length-1, 1)",
        "const vlanResult = await window.monkshu_env.frameworklibs.apimanager.rest(APP_CONSTANTS.API_KLOUDUSTCMD, ",
        "   'POST', {cmd: 'listVlans'}, true);",
        "if (vlanResult.result) for (const v of vlanResult.resources) { ",
        "   const vlan = form.required_fields[form.required_fields.length-2];",
        "   vlan.options.push({value: v.name,label: v.name}); }",
        "return form;"
    ],

    "submitlabel": "{{{i18n.CreateVMSubmitLabel}}}",

    "submit_javascript": [
        "const retObject = arguments[0]||{};",
        "if (retObject.cloudinit_data && (retObject.cloudinit_data.trim() != '')) { ",
        "   LOG.info(`Not overriding existing cloudinit which is: ${retObject.cloudinit_data}`); return true; }",
        "const cloudinitTemplate = \"{system_info: {default_user: {name: \\u{007B}\\u{007B}\\u{007B}adminid\\u{007D}\\u{007D}\\u{007D}, home: /home/\\u{007B}\\u{007B}\\u{007B}adminid\\u{007D}\\u{007D}\\u{007D}, sudo: 'ALL=(ALL) NOPASSWD:ALL'}}, password: \\u{007B}\\u{007B}\\u{007B}adminpass\\u{007D}\\u{007D}\\u{007D}, chpasswd: {expire: false}, hostname: \\u{007B}\\u{007B}\\u{007B}vm_name\\u{007D}\\u{007D}\\u{007D}, ssh_pwauth: true, package_upgrade: true, packages: [net-tools], runcmd: null}\";",
        "const randomWindowsStr = (Math.random() + 1).toString(36).split(\".\")[1];",
        "const cloudinitTemplateWindows = `{hostname: \\u{007B}\\u{007B}\\u{007B}vm_name\\u{007D}\\u{007D}\\u{007D}, users: [{name: Admin, passwd: ${randomWindowsStr}, inactive: true, no_create_home: true, primary_group: Administrators}, {name: \\u{007B}\\u{007B}\\u{007B}adminid\\u{007D}\\u{007D}\\u{007D}, passwd: \\u{007B}\\u{007B}\\u{007B}adminpass\\u{007D}\\u{007D}\\u{007D}, inactive: false, primary_group: Administrators}]}`;",
        "const router = (await import(\"/framework/js/router.mjs\")).router;",
        "const mustache = await router.getMustache();",
        "const cloudInit = mustache.render(retObject.creation_image_name.toLowerCase().startsWith(\"windows\") ? ",
        "   cloudinitTemplateWindows : cloudinitTemplate, retObject);",
        "LOG.info(`Generated cloudinit is: ${cloudInit}`);",
        "retObject.cloudinit_data = cloudInit;",
        "if (retObject.override_host && retObject.override_host.trim() == '') delete retObject.override_host;",
        "return true;"
    ]
}

}
