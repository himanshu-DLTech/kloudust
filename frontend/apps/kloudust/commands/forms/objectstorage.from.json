{
"id": "objectstorage",
"command": "tablelist",
"type": "table_display",

"i18n": {
"en": {
    "VMS_name_raw": "Name",
    "VMS_description": "Description",
    "VMS_os": "Type",
    "VMS_disk": "OS Disk (GB)",
    "VMS_cpus": "Cores",
    "VMS_memory": "Memory (MB)",
    "VMS_datetime": "Date created",
    "VMS_state": "State",
    "VMS_vlanName": "VLAN",

    "VMSAssignIP": "Assign IP",
    "VMSDelete": "Delete"
},

"hi": {
    "VMS_name_raw": "Name",
    "VMS_description": "Description",
    "VMS_os": "Type",
    "VMS_disk": "OS Disk (GB)",
    "VMS_cpus": "Cores",
    "VMS_memory": "Memory (MB)",
    "VMS_datetime": "Date created",
    "VMS_state": "State",
    "VMS_vlanName": "VLAN",

    "VMSAssignIP": "Assign IP",
    "VMSDelete": "Delete"
},

"ja": {
    "VMS_name_raw": "Name",
    "VMS_description": "Description",
    "VMS_os": "Type",
    "VMS_disk": "OS Disk (GB)",
    "VMS_cpus": "Cores",
    "VMS_memory": "Memory (MB)",
    "VMS_datetime": "Date created",
    "VMS_state": "State",
    "VMS_vlanName": "VLAN",

    "VMSAssignIP": "Assign IP",
    "VMSDelete": "Delete"
},

"zh": {
    "VMS_name_raw": "Name",
    "VMS_description": "Description",
    "VMS_os": "Type",
    "VMS_disk": "OS Disk (GB)",
    "VMS_cpus": "Cores",
    "VMS_memory": "Memory (MB)",
    "VMS_datetime": "Date created",
    "VMS_state": "State",
    "VMS_vlanName": "VLAN",

    "VMSAssignIP": "Assign IP",
    "VMSDelete": "Delete"
}
},

"tabledef": {
    "popupform": {
    "rolelist": {
        "*":[
            {"id": "assignipvm", "label": "{{{i18n.VMSAssignIP}}}", "logo": "img/assignipvm.svg"},
            {"id": "deletevm", "label": "{{{i18n.VMSDelete}}}", "logo": "img/deletevm.svg"}
        ]
    }
    },

    "style": "div#tablebottombar{display: none;}",

    "i18nPrefix": "VMS",

    "onclickrow_html": [
        "<style>div#onclick_html {background-color: #F8F8F8; width: auto;} div#close{display: none !important}</style>",
        "<style>div#onclickrow_html {height: fit-content;} div#body{background-color: #F8F8F8 !important}</style>",
        "<style>div#buttons {margin: 0 !important; align-items: flex-start !important; height: 100% !important;}</style>",
        "<style>div#button {height: unset !important; max-height: 100% !important; margin: 0 !important; color: #BC5205 !important;}</style>",
        "<style>div#button {width: 6em !important; font-size: 0.8em !important; box-sizing: border-box !important!;}</style>",
        "<style>div#button {border: 1px solid transparent; border-radius: 0.5em; padding: 0.5em;}</style>",
        "<style>div#button img {width: 3em !important; height: 3em !important;}</style>",
        "<style>div#button span {font-size: smaller !important; height: -webkit-fill-available;}</style>",
        "<style>div#button:hover {border: 1px dashed #BC5205 !important;}</style>"
    ],

    "clickrow_javascript": [
        "const data = arguments[0]; APP_CONSTANTS.ENV._vms_form_data = data;"
    ],

    "load_javascript": [
        "const vms = await $$.libapimanager.rest(APP_CONSTANTS.API_KLOUDUSTCMD, 'POST', {",
            "cmd: `listVMsForOrgOrProject \"${$$.libsession.get(APP_CONSTANTS.USERORG)}\" \"${$$.libsession.get(APP_CONSTANTS.ACTIVE_PROJECT)}\" storage3`, ",
            "project: $$.libsession.get(APP_CONSTANTS.ACTIVE_PROJECT)}, true);",
        "for (const vm of vms.vms||[]) {vm.datetime = new Date(vm.timestamp).toLocaleDateString(); vm.disk = vm.disks[0].size;}",
        "const modIconList = await import(`${APP_CONSTANTS.FORM_MODULES_PATH}/iconlist.mjs`), tabledef = arguments[0];",
        "const html = await modIconList.iconlist.getHTML(tabledef.popupform, monkshu_env.apps[APP_CONSTANTS.APP_NAME].cmdmanager);",
        "tabledef.onclickrow_html.push(html);",
        "return {keys: ['name_raw','description','os','disk','cpus','memory','vlanName','datetime'], table: vms.vms||[]};"
    ]
}
}